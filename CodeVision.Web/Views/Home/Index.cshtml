@using System.Web.Razor.Parser
@using CodeVision.Web.ViewModels
@using Ninject
@using PagedList.Mvc
@model CodeVision.Web.ViewModels.SearchResult

<link href="/Content/PagedList.css" />

@{
    ViewBag.Title = "Home";
}

<style>
    input.big-input {
        width: 600px;
        height: 37px;
    }

    div.second-row {
        margin-top: 5px;
    }
</style>


<div class="container">
    @using (Html.BeginForm("Search", "Home", FormMethod.Post))
    {
        <div>
            @Html.TextBox("searchExpression", null, new { @class = "big-input" })
            <button type="submit" class="btn btn-primary">Search</button>
        </div>
        <div class="second-row">
            @Html.LabelFor(s => s.Language)
            @Html.DropDownListFor(s => s.Language, Model.LanguageList)

            @Html.LabelFor(s => s.Sort)
            @Html.DropDownListFor(s => s.Sort, Model.SortList)
        </div>
    }

    @if (Model.Hits.Count > 0)
    {
        <h5>Total hits:@Model.TotalHits</h5>

        foreach (SearchHit hit in Model.Hits)
        {
            <p>
                <div>
                    @Html.ActionLink(hit.FileName, "Details", "Content", new { hit = @hit.ToString() }, null)
                </div>
                @if (!string.IsNullOrEmpty(hit.BestFragment))
                {
                    <pre class="@hit.PrismCssClassName" data-keep-tags="kbd"><code class="@hit.PrismCssClassName">@Html.Raw(hit.BestFragment)</code></pre>
                }
                else
                {
                <p></p>
                }
                </p>
        }

        @Html.PagedListPager(Model.Hits, page => Url.Action("Search", new { SearchExpressionEncoded = Model.SearchExpressionEncoded, Language = Model.Language, Sort = Model.Sort, Page = page }))
    }
    else if (!string.IsNullOrEmpty(Model.SearchExpression) && !Model.HasError)
    {
        <h5>Couldn't find anything that matches '@Model.SearchExpression' at this time.</h5>
    }
    else
    {
        <h5>@Model.Error</h5>
    }
</div>